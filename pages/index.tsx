import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { useState, useContext, createContext, useRef, useEffect } from "react";
import { useRouter } from "next/router";
import NumberRandomizer from "./NumberRandomizer";

const Home: NextPage = () => {
  const router = useRouter();
  const prevNumOfPlayers: any = useRef([]);
  const [numOfPlayers, setNumOfPlayers] = useState(0);
  const [players, setPlayers] = useState(prevNumOfPlayers);

  //@ts-ignore
  // useEffect((): any => {
  //   prevNumOfPlayers.current = numOfPlayersInput;
  // }, [numOfPlayersInput]);

  const PlayerCountInput = (props: any) => {
    return (
      <>
        <input ref={prevNumOfPlayers} value={props.value} type="text" name="players"></input>
      </>
    );
  };

  const addInputs = (): any => {
    // @ts-ignore
    // const players = prevNumOfPlayers.current.value;
    const playerInputs = players.map((persons: any, index: any): any => (
      <PlayerCountInput name="newInputs" key={persons.toString()} id={persons.id} type="text" />
      // <div>{persons}</div>
      // <div>{index}</div>
      // <div>{index.key}</div>
    ));

    return <div>{playerInputs}</div>;
  };

  const handleClick = () => {
    // prevNumOfPlayers.current.value;
    console.log(prevNumOfPlayers.current.value);
    const numOfPlayers = prevNumOfPlayers.current.value;
    console.log("START of setNumOfPlayers");

    setNumOfPlayers(numOfPlayers);
    if (numOfPlayers > 0) {
      const generateInputs: any = Array.from(Array(Number(numOfPlayers)).keys());
      setPlayers(generateInputs);
    } else {
      setPlayers([]);
    }
    console.log("END of setNumOfPlayers");
    // router.push("/NumberRandomizer");
  };

  // @ts-ignore
  // console.log(" onClickNumberOfPlayers = ", onClickNumberOfPlayers());
  // @ts-ignore
  // console.log("numOfPLayers = ", numOfPlayers);
  // @ts-ignore
  // const inputs = useState(0);
  // const inputs = addInputs();
  // console.log("updateInputs is =", updateInputs);
  // @ts-ignore
  const inputs = players.length ? <div>{addInputs(prevNumOfPlayers.current)}</div> : null;
  // console.log("inputs is = ", inputs);
  // console.log("players is = ", players);

  return (
    <>
      <div>
        <Head>
          <title>BOTCT Companion</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main>
          <h1>
            Welcome to <a href="https://bloodontheclocktower.com/">Blood On The Clock Tower</a> Companion!
          </h1>
          <form>
            <input
              type="text"
              // defaultValue={numOfPlayers}
              // ref={numOfPlayersInput}
              // value={numOfPlayers}
              // onChange={(e) =>
              //   //@ts-ignore
              //   setNumOfPlayers(e.target.value)
              // }
              // onChange={onClickNumberOfPlayers}
            ></input>
          </form>
          <button type="submit" value={numOfPlayers} onClick={handleClick}>
            Add Player
          </button>

          {/* 
      //@ts-ignore */}

          {players.length ? <div>{addInputs()}</div> : null}
          {/* 
      //@ts-ignore */}
          {/* <NumberRandomizer inputs={inputs} /> */}
          {/* {prevNumOfPlayers.current} */}

          <div>{inputs}</div>
          {/* 
      //@ts-ignore */}
        </main>
      </div>
    </>
  );
};

export default Home;
